::
  init_rect\!data.Rect\?
  @rect+\data.Rect\
  if init_rect
    @rect = init_rect.clone

:add
  images\!model.Image|!A.<!model.Image>\$
  // Used only if there is one image.
  image_rect\!data.Rect\?
  if images instanceof model.Image
    @addImage(images, image_rect)
  else
    images.forEach(##)
      image\!model.Image\$
      @addImage(image)

:@addImage
  img\!model.Image\$
  img_rect\!data.Rect\?
  rotation := img.rotation
  scale := img.scale
  xfm_rect := img_rect ? img_rect.clone : img.rect
  if rotation || scale
    half_w := 0.5 * xfm_rect.w
    half_h := 0.5 * xfm_rect.h
    // Corner coord from the center of the image (doesn't matter which
    // corner).
    x := half_w
    y := half_h
    if scale
      x = x * scale
      y = y * scale
    if rotation
      c := Math.abs(Math.cos(rotation))
      s := Math.abs(Math.sin(rotation))
      x = c * x + s * y
      y = s * x + c * y
    xfm_rect.x0 = xfm_rect.x0 + half_w - x
    xfm_rect.y0 = xfm_rect.y0 + half_h - y
    xfm_rect.x1 = xfm_rect.x0 + 2.0 * x
    xfm_rect.y1 = xfm_rect.y0 + 2.0 * y
  @rect = @rect ? @rect.union(xfm_rect) : xfm_rect

intersectPixelRegion = ##
::
  // Overwrites this parameter.
  @pixels\ImageData\$

:update
  mask\ImageData\$
  dx\n\$
  dy\n\$
  diff\b\$
  // Modify pixels to make intersection or diff of the mask.
  // Go thru all the pixels and modify the values.
  max_alpha := Math.floor(255.0 * 0.3)
    // This 0.3 needs to match the alpha in Stencil.draw_segment.
  for y := 0; y < @pixels.height; y++
    for x := 0; x < @pixels.width; x++
      sx := x + dx
      sy := y + dy
      stencil := 0.0

      if #&&
        sx >= 0
        sx < mask.width
        sy >= 0
        sy < mask.height
        --
        mask_alpha := mask.data[(sx + sy * mask.width) * 4 + 3]
        stencil = mask_alpha >= max_alpha ? 1.0 : mask_alpha / max_alpha
      if diff
        stencil = 1.0 - stencil
      if stencil < 1.0
        base := (x + y * @pixels.width) * 4
        alpha_idx := base + 3
        alpha := #?
          stencil <= 0.0
          0
          Math.floor(@pixels.data[alpha_idx] * stencil)
        if alpha == 0
          for i := 1; i < 4; i++
            @pixels.data[base + i] = 0
        @pixels.data[alpha_idx] = alpha

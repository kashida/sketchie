Temporary representation of image item.
::
  @position+\data.Vec2\$
  @dataUrl+\s\$

:makeImageItem\!model.Image\
  img\model.Image\?
  // TODO: img != undefined pass shouldn't happen anymore
  // (still used from stencil, but it shouldn't be using here).
  add_img := !img
  if img
    // Refresh the transform.
    img.xform.rotation = 0
    img.xform.scale = 1.0
  else
    img = &model.Image()
  img.xform.position = @.position
  img.src = @.dataUrl
  if add_img
    f_page.list.appendEnd(img)
  f_page.selection.select(img)
  => img

:mergeImageItem\!model.Image\
  img\model.Image\$
  bbox\data.Rect\$
  old_xform := img.xform.snapshot
  img.src = @.dataUrl
  img.xform.centerPosition = ui.Coords.item2doc(#, old_xform)
    // New image center position in the old item coords.
    #.
      @.position
      minus(bbox.p00)
      plus(img.xform.rect.center)
  f_page.selection.select(img)
  => img

Make a new image item assuming the given position is viewport position.
The new item's xform is made to reverse the current viewport xform.
:makeNewImageItem\!model.Image\
  img := &model.Image()
  img.src = @.dataUrl
  center := &data.Vec2(img.width, img.height).mult(0.5)
  // Set the scale to counter the viewport scaling.
  scale := 1.0 / f_viewport.xform.scale
  p := #.
    // Pixel position converted to the document translation.
    @position.mult(scale)
    // Scaling of the item is around its center, so counter the difference.
    minus(center.mult(1.0 - scale))
    // Counter the viewport translation.
    minus(f_viewport.xform.offset)
  img.xform.set(scale, 0, p.x, p.y)
  f_page.list.appendEnd(img)
  f_page.selection.select(img)
  => img

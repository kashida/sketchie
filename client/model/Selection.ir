TODO: use model.Item's members to mark the selected items instead of the
element's classList.
but css depends on the class for rendering selected items differently...

First element in the 'list' is the primary selection, and should have the focus.

::
  // TODO: take item.List as param and use the classes to mark selected items.
  // so we don't need an array here.
  @list+\!A.<!%.Item>\ []
  @onChange+\!NullEvent\ &NullEvent()

:clear
  @list = []

:isAny+\b\
  => @list.length > 0
:isEmpty+\b\
  => @list.length == 0
:count+\n\
  => @list.length
:head+\%.Item\
  => @list.length <= 0 ? null : @list[0]

:isSelected\b\
  item\%.Item\$
  => item.element.classList.contains('selected')

:select
  item\!%.Item\$
  push_to_list\b\? false
  if @.isAny && @.head && @.head.element
    @.head.element.className = null
  if push_to_list
    if @list.indexOf(item) >= 0
      // Remove the item once.
      @list.splice(@list.indexOf(item), 1)
  else
    // Clean up all the selection from the list.
    @list.forEach(##)
      item\!model.Item\$
      if item.element
        item.element.className = null
    @list = []
  item.element.classList.add('selected')
  item.focus()
  @list.unshift(item)
  @onChange.fire()
  f_item_palette.update()

:add
  item\%.Item\$
  // Add as a secondary selection.
  if !item || @list.indexOf(item) >= 0
    =>
  item.element.classList.add('selected')
  @list.push(item)
  item.focus()
  f_item_palette.update()
  @onChange.fire()

:remove
  item\%.Item\$
  item.element.className = null
  i := 0
  while i < @list.length
    if @list[i] == item
      @list.splice(i, 1)
      break
    i++
  @onChange.fire()
  f_item_palette.update()

:clear
  @list.forEach(##)
    item\%.Item\$
    if item.element
      item.element.className = null
  @list = []
  @onChange.fire()
  f_item_palette.close()

:isHeadText+\b\
  => @.isAny && @.head instanceof %.Text

:isAllText+\b\
  if !@.isAny
    => false
  => @list.every(##)
    item\%.Item\$
    => item instanceof %.Text

:isHeadImage+\b\
  => @.isAny && @.head instanceof %.Image

:isAllImage+\b\
  if !@.isAny
    => false
  => @list.every(##)
    item\%.Item\$
    => item instanceof %.Image

::

:moveToEnd
  items\A<~Item>\$
  send_back\b\$
  // Preserve the z order among the selected items.
  remove_list := f_page.list.zOrder(items)
  if send_back
    f_page.list.insertFirst(remove_list)
  else
    f_page.list.appendEnd(remove_list)

:shiftOne
  item\~Item\$
  send_back\b\$
  // TODO: move only the items in viewport.
  idx := f_page.list.indexOf(item)
  if send_back
    prev_item := f_page.list.childAt(idx - 1)
    if prev_item
      f_page.list.insertBefore(prev_item, [item])
  else
    next_item := f_page.list.childAt(idx + 1)
    if next_item
      f_page.list.insertAfter(next_item, [item])

:shiftOneWithOverlap
  send_back\b\$
  &~ZShifter(send_back).shift()

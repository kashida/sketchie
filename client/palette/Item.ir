Item list mode parameter adjustments.
::<%.Palette
  @blend_alpha\Slider\ &Slider('item_alpha', 'blend alpha%', 0, 100, 100, 20)
  @alpha_lock\Element\ id('image_alph_alock')
  @blend_alpha.callbackUpdate = ##
    @updateBlendAlpha()
  ^('item_palette', {i: 'image_section'})
  listen(@alpha_lock, 'change', ##)
    @updateAlphaLock()

:blendAlphaAdjust
  incr\n\$
  @blend_alpha.adjust(incr)

:toggleAlphaLock
  img\Image\?
  if !img
    if !f_page.selection.isHeadImage
      =>
    img = \Image\(f_page.selection.head)
  setIsAttr(img, 'alpha_lock', !isAttr(img, 'alpha_lock'))
  @alpha_lock.checked = attr(f_page.selection.head, 'alpha_lock') == 'true'

:@updateBlendAlpha
  // Update selected item's state, based on control.
  sel := f_page.selection.head
  if !sel
    =>
  setAttr(sel, 'blend_alpha', String(@blend_alpha.value))
  sel.style.opacity = @blend_alpha.value / 100

:@updateAlphaLock
  // Update selected item's state, based on control.
  if !f_page.selection.isHeadImage
    =>
  setAttr(#)
    f_page.selection.head
    'alpha_lock'
    @alpha_lock.checked ? 'true' : undefined

:update
  // Update the control based on the seleted item's state.
  if !f_page.selection.head
    @.close()
    =>
  sel := f_page.selection.head
  blend_alpha := attr(sel, 'blend_alpha')
  if blend_alpha
    @blend_alpha.setValue(blend_alpha)
  else
    @blend_alpha.reset()

  if f_page.selection.isHeadImage
    @alpha_lock.checked = attr(f_page.selection.head, 'alpha_lock')
    @.openSection('i')
  else
    @.closeSection('i')

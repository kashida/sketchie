::<%.Editor
  ^()

:@holdSelection
  f_page.selection.list.forEach(##)
    item\model.Item\$
    item.isActive = false
    item.style['pointer-events'] = 'none'
  f_page.selection.clear()

:@unholdAll
  f_page.list.each(##)
    item\model.Item\$
    item.isActive = true
    item.style['pointer-events'] = null

:dispatch
  evt\Event\$
  shift := 0x100
  key := evt.keyCode
  if evt.shiftKey
    key += shift

  // Selection control.
  //if key == c('H')
  //  @holdSelection()
  //else if key == c('H') + shift
  //  @unholdAll()

  // Transform.
  else if key == c('R')
    f_item_palette.close()
    f_editor_modes.changeModeTo('r')
  else if key == c('T')
    f_item_palette.close()
    f_editor_modes.changeModeTo('q')

  // Open / close the control palette.
  else if key == c(' ')
    f_item_palette.toggle()

  // Entering to the text mode.
  else if key == c('I')
    f_editor_modes.changeModeTo('ti')
  else if key == c('E')
    f_editor_modes.changeModeTo('te')

  // Draw / stencil mode change.
  //else if key == c('S')
  //  f_editor_modes.changeModeTo('s')

  // Mark image alpha locked.
  //else if key == c('X')
  //  f_item_palette.toggleAlphaLock()

  // Adjust the image blend alpha.
  //else if key == DOM_VK_COMMA + shift || key == DOM_VK_PERIOD + shift
  //  f_item_palette.blendAlphaAdjust(evt.keyCode == DOM_VK_PERIOD ? 1 : -1)

  // Viewport control.
  else if key == DOM_VK_LEFT
    f_viewport.xform.move(-1, 0)
  else if key == DOM_VK_UP
    f_viewport.xform.move(0, -1)
  else if key == DOM_VK_RIGHT
    f_viewport.xform.move(1, 0)
  else if key == DOM_VK_DOWN
    f_viewport.xform.move(0, 1)
  else
    f_global_actions.dispatch(\KeyboardEvent\(evt))
    f_selection_actions.dispatch(\KeyboardEvent\(evt))

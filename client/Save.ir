::

:json+\!Blob\
  => JSON.stringify(f_page.list.serializable)

:jsonBlob+\!Blob\
  => &Blob([@.json], {type: 'application/json'})

:html+\s\
  // TODO: Freeze / restore items one by one and stream them so we don't need to
  // hold the html text coyp of the entire document in memory.
  f_page.freeze()
  page := Templates.page({#})
    editor: false
    script: ''
    init: ''
    contents: #+
      '<div class="itemlist">'
      dom.id('itemlist').innerHTML
      '</div>\n'
  f_page.restore()
  => page

:htmlBlob+\!Blob\
  => &Blob([@.html], {type: 'text/html'})

:store
  // Send everything in the item list.
  if run_as_extension
    //@storeToSyncFs(@.jsonBlob)
    @storeToSyncFs(@.htmlBlob)
  else
    xhrPost(location.pathname.replace(#), @.json)
      /\.html$/i
      '.sktch'
    xhrPost(location.pathname, @.html)

:exportLocal
  chrome.fileSystem.chooseEntry({type: 'saveFile'}, ##)
    entry\Entry\?
    entry && fs.write(\!Entry\(entry), @.htmlBlob)

:@storeToSyncFs
  data\!Blob\$
  fname\s\?
  if fname
    @saveToFile(data, fname)
  else
    @saveWithDialog(data)

:@saveWithDialog
  data\!Blob\$
  f_fs.fileList(##)
    files\!A.<s>\$
    User.fileName(##)
      default_file_name\s\$
      ui.FileDialog.save(default_file_name, files, ##)
        fname\?string\$
        fname && @saveToFile(data, fname)

:@saveToFile
  data\!Blob\$
  fname\s\$
  f_fs.save(data, fname, ##)
    fname\s\$
    User.storeFileName(fname)

::
  @req+\_http.ServerRequest\$
  @res+\_http.ServerResponse\$
  @parsed\O\ _url.parse(@req.url, true)
  @fileType\FileType\
  @extraScripts&\!A.<s>\ []
  @extraInit&\s\ ''

:path+\s\
  => @parsed.pathname

:query+\O\
  => @parsed.query

:fileType+\FileType\
  => @fileType || (@fileType = &FileType(@.path))

:ext+\s\
  => @.fileType.ext

:mime+\s\
  => @.fileType.mime

:format+\s\
  => @.fileType.format

:sendFile\b\
  input_file\s\$
  replacer\f(s):s\?
  // Check if the input file exists.
  if !_path.existsSync(input_file)
    => false

  // Make a response.
  @res.writeHead(200, {'Content-Type': @.mime})
  data := _fs.readFileSync(input_file, @.format)
  if replacer
    data = replacer(data)
  @res.write(data)
  => true

:response
  code\n\$
  msg\s\?
  @res.statusCode = code
  @res.end()
  if msg
    log(code + ' ' + msg)

:tryWithResponse
  cb\F\$
  try
    cb()
    @.response(200)
  catch e
    @.response(500, e.stack)

::
  @ctxt\Context\$
  @handlers\HandlerSet\$

:SCRIPT_LOAD = '<script>run_sketchie();</script>'
:OPEN_MARKER = '<!--%'
:CLOSE_MARKER = '%-->'

:@packageList\s\
  => #+
    '<script>\n'
    &Compile('client').pkgList().map(##).join('')
      line\s\$
      => line + '\n'
    '</script>\n'

:@scriptList\s\
  list := &Compile('client').scriptList.map(##).join('')
    file\s\$
    => '<script src="/_s/' + file + '"></script>\n'
  if @ctxt.extraScripts.length
    list += @ctxt.extraScripts.map(##).join('')
      file\s\$
      => '<script src="/_ts/' + file + '"></script>\n'
  => list

Try to render. If fail, return the input as is (and log the error message).
:@tryReplace\s\
  tmpl\s\$
  opt\O\$
  try
    => _ejs.render(tmpl, opt)
  catch e
    log(e.stack)
    => tmpl

:replaceScript\s\
  html\s\$
  => @tryReplace(html, {#})
    open: %.HtmlHandler.OPEN_MARKER
    close: %.HtmlHandler.CLOSE_MARKER
    script: #+
      @packageList()
      @scriptList()
    init: %.HtmlHandler.SCRIPT_LOAD + @ctxt.extraInit

:create
  @handlers.pageRender.reply([{contents: ''}, {#}])
    open: %.HtmlHandler.OPEN_MARKER
    close: %.HtmlHandler.CLOSE_MARKER
    script: #+
      @packageList()
      @scriptList()
    init: %.HtmlHandler.SCRIPT_LOAD + @ctxt.extraInit
